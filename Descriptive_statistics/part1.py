# -*- coding: utf-8 -*-
"""data_stats.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15bDD9XrazOif5CK_m9WRaMajuo96O02m
"""

import pandas as pd
import numpy as np
import seaborn as sns
import warnings

df=pd.read_csv('/home/student/Downloads/data1.csv',low_memory=False)
df

df.info()

df.describe()

df['age'].min()

df.age.min()

df.age.count()

df.age.max()

df.age.std()

df.age.mean()

df.age.quantile(0.25)

df.age.quantile(0.5)

df.age.quantile(0.75)

df.income.nunique()

df.groupby(['income','age'])

df.groupby(['age','income']).count()

df.groupby(['income','age']).min()

df.groupby(['age','income']).max()

df.groupby('income')['age'].mean()

df.groupby('income')['age'].min()

df.groupby('income')['age'].max()

df.groupby('income')['age'].median()

df.groupby('income')['age'].quantile(0.25)

df.groupby('income')['age'].quantile(0.5)

df.groupby('income')['age'].quantile(0.75)

df.groupby('income')['age'].std()

df.groupby('income')['age'].count()

def display_statistics(dataset, dataset_name):
    numerical_columns = ['age', 'fnlwgt', 'educational-num', 'capital-gain', 'capital-loss', 'hours-per-week']
    print(f"\nStatistics for {dataset_name}:")

    def median(column_data):
        sorted_data = sorted(column_data)
        n = len(sorted_data)
        mid = n // 2
        if n % 2 == 0:
            return (sorted_data[mid - 1] + sorted_data[mid]) / 2
        return sorted_data[mid]

    def min_max(column_data):
        return min(column_data), max(column_data)

    print("\nMean")
    for col in numerical_columns:
        mean = dataset[col].mean()
        print(f"{col}: {mean:.3f}")

    print("\nMedian")
    for col in numerical_columns:
        median_value = median(dataset[col].dropna().values)
        print(f"{col}: {median_value:.3f}")

    print("\nStandard Deviation")
    for col in numerical_columns:
        std_deviation = dataset[col].std()
        print(f"{col}: {std_deviation:.6f}")

    print("\nMin and Max")
    for col in numerical_columns:
        min_value, max_value = min_max(dataset[col].dropna().values)
        print(f"{col}: Min = {min_value}, Max = {max_value}")

    print("\nQuantile 25")
    for col in numerical_columns:
        q1 = dataset[col].quantile(0.25)
        print(f"25th Percentile of {col}: {q1}")

    print("\nQuantile 75")
    for col in numerical_columns:
        q3 = dataset[col].quantile(0.75)
        print(f"75th Percentile of {col}: {q3}")

display_statistics(df, "Demographic Dataset")

