# -*- coding: utf-8 -*-
"""data_part2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16ucHyByaoRFTnGzLN1U7nnMSK80978_r
"""

import pandas as pd
import numpy as np
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')

iris_data=sns.load_dataset('iris')

iris_data

iris_data.info()

iris_data.describe()

iris_data.groupby('species').count()

setosa_data=iris_data[iris_data['species']=='setosa']
setosa_data

virginica_data=iris_data[iris_data['species']=='virginica']
virginica_data

#showing records of versicolor
versicolor_data=iris_data[iris_data['species']=='versicolor']
versicolor_data

setosa_data.describe()

versicolor_data.describe()

virginica_data.describe()

setosa_data.min()

setosa_data.max()

setosa_data.sepal_length.mean()

setosa_data.sepal_length.std()

setosa_data.sepal_length.quantile(0.25)

setosa_data.sepal_length.quantile(0.5)

virginica_data.min()

virginica_data.max()

virginica_data.sepal_width.mean()

versicolor_data.sepal_length.mean()

def display_statistics(species_data,species_name):
    nc=['sepal_length','sepal_width','petal_length','petal_width']
    print(f"\nSatistics for {species_name}:")
    print("mean\n",species_data[nc].mean())
    print("Std\n",species_data[nc].std())
    print("25%\n",species_data[nc].quantile(0.25))
    print("medan\n",species_data[nc].median())
    print("75%\n",species_data[nc].quantile(0.75))

display_statistics(setosa_data,'setosa')

display_statistics(virginica_data,'iris_virginica')

display_statistics(versicolor_data,'versicolor')

print('setosa_data')

iris_data.describe()

def display_statistics(species_data,species_name):
    nc=['sepal_length','sepal_width','petal_length','petal_width']
    print(f"\nSatistics for {species_name}:")
    for col in nc:
        column_data=species_data[col].values
        mean=sum(column_data)/len(column_data)
    print(f"Mean of {col}:{mean}")

display_statistics(setosa_data,'setosa')

def display_statistics(species_data,species_name):
    nc=['sepal_length','sepal_width','petal_length','petal_width']
    print(f"\nSatistics for {species_name}:")
    all_cols = [species_data[col].values for col in nc]
    all_cols = [item for sublist in all_cols for item in sublist]

    mean= sum(all_cols) / len(all_cols)
    print(f"Mean of all columns: {mean}")

display_statistics(setosa_data,'setosa')

import numpy as np

def display_statistics(species_data, species_name):
    nc = ['sepal_length', 'sepal_width', 'petal_length', 'petal_width']
    print(f"\nStatistics for {species_name}:")

    print("\nmean")
    for col in nc:
        column_data = species_data[col].values
        mean = sum(column_data) / len(column_data)
        print(f"{col}    {mean:.3f}")

    print("\nStd")
    for col in nc:
        column_data = species_data[col].values
        mean = sum(column_data) / len(column_data)
        variance = sum((x - mean) ** 2 for x in column_data) / len(column_data)
        std_deviation = np.sqrt(variance)
        print(f"{col}    {std_deviation:.6f}")

    print("\nQuantile 25")
    for col in nc:
        column_data =sorted(species_data[col].values)
        q1=np.percentile(column_data,0.25)
        print(f"25th Percentile of {col}: {q1}")

    print("\nQuantile 75")
    for col in nc:
        column_data =sorted(species_data[col].values)
        q3=np.percentile(column_data,0.75)
        print(f"75th Percentile of {col}: {q3}")



display_statistics(setosa_data, 'Setosa')

